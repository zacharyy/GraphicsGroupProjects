#version 330

layout (location = 0) in vec3 v_position;
layout (location = 1) in vec3 v_normal;
layout (location = 2) in vec2 v_texture;

out vec2 texture;
out vec3 fN;
out vec3 fE;
out vec3 fL;
out vec3 v_pos;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelMatrix;
uniform vec4 LightPosition;

uniform mat4 ModelView;

void main(void)
{
	vec4 v = vec4(v_position, 1.0);
	fN = v_normal;
	fE = ((projectionMatrix *viewMatrix * modelMatrix) * v).xyz;
	fL = LightPosition.xyz;

	if(LightPosition.w != 0.0)
	{
		fL = LightPosition.xyz - v_position.xyz;
	}

	gl_Position = (projectionMatrix * viewMatrix * modelMatrix) * v; 

	texture = v_texture;
	v_pos = vec3(modelMatrix * v);
}
